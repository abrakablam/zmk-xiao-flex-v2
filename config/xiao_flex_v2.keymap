/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC         &kp N1  &kp N2       &kp N3           &kp N4        &kp N5       &kp N6        &kp N7     &kp N8         &kp N9    &kp N0    &kp EQUAL
&kp BSLH        &kp Q   &kp W        &kp F            &kp P         &kp B        &kp J         &kp L      &kp U          &kp U     &kp SEMI  &kp MINUS
&kp LCTRL       &kp A   &kp R        &kp S            &kp T         &kp G        &kp M         &kp N      &kp E          &kp I     &kp O     &kp APOS
&kp LEFT_SHIFT  &kp Z   &kp X        &kp C            &kp D         &kp V        &kp K         &kp H      &kp COMMA      &kp DOT   &kp FSLH  &kp GRAVE
                        &kp PAGE_UP  &kp PAGE_DOWN                                                        &kp LBKT       &kp RBKT
                                     &lt 1 BACKSPACE  &lt 2 ESCAPE  &kp RIGHT    &kp UP_ARROW  &kp ENTER  &kp BACKSPACE
                                     &none            &lt 3 DELETE  &kp LEFT     &kp DOWN      &kp ENTER  &none
            >;
        };

        cursor {
            bindings = <
&sys_reset  &trans        &trans        &trans     &trans          &trans    &trans     &trans          &trans        &trans         &trans      &trans
&trans      &trans        &trans        &trans     &trans          &trans    &kp LC(X)  &kp INS         &kp LC(Z)     &kp RC(Y)      &kp DELETE  &kp RS(UP_ARROW)
&trans      &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &trans    &kp RC(C)  &kp LEFT_ARROW  &kp UP_ARROW  &kp DOWN       &kp RIGHT   &kp RS(DOWN)
&trans      &trans        &trans        &trans     &trans          &trans    &kp RC(V)  &kp HOME        &kp PAGE_UP   &kp PAGE_DOWN  &kp END     &kp RC(A)
                          &trans        &trans                                                          &kp RC(F)     &trans
                                        &trans     &trans          &trans    &trans     &kp CAPSLOCK    &kp RA(TAB)
                                        &trans     &trans          &trans    &trans     &trans          &trans
            >;
        };

        number {
            bindings = <
&none  &none         &none         &none      &none           &none    &kp GRAVE         &kp DOLLAR  &kp HASH   &kp AT_SIGN  &kp EXCLAMATION  &kp CARET
&none  &none         &none         &none      &none           &none    &kp LESS_THAN     &kp N7      &kp N8     &kp N9       &kp SEMI         &kp PERCENT
&none  &kp LEFT_WIN  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp GREATER_THAN  &kp N4      &kp N5     &kp N6       &kp MINUS        &kp PLUS
&none  &none         &none         &none      &none           &none    &kp EQUAL         &kp N1      &kp N2     &kp N3       &kp FSLH         &kp ASTERISK
                     &none         &none                                                             &kp COMMA  &kp DOT
                                   &none      &none           &none    &kp TAB           &kp N0      &none
                                   &none      &none           &none    &none             &kp ENTER   &none
            >;
        };

        function {
            bindings = <
&none  &none         &none     &none      &none      &none    &none  &none              &none       &none   &none    &none
&none  &none         &none     &none      &none      &none    &none  &kp F7             &kp F8      &kp F9  &kp F10  &none
&none  &kp LEFT_WIN  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &none  &kp F4             &kp F5      &kp F6  &kp F11  &none
&none  &none         &none     &none      &none      &none    &none  &kp F1             &kp F2      &kp F3  &kp F12  &none
                     &none     &none                                                    &none       &none
                               &none      &none      &none    &none  &kp C_VOLUME_UP    &kp K_MUTE
                               &none      &none      &none    &none  &kp C_VOLUME_DOWN  &none
            >;
        };

        symbol {
            bindings = <
&kp TILDE  &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp QUESTION    &none  &none      &none      &none     &none     &none
&kp SLASH  &kp LEFT_BRACE    &kp GRAVE             &kp SQT                &kp RIGHT_BRACE    &kp AT_SIGN     &none  &none      &none      &none     &none     &none
&kp HASH   &kp LESS_THAN     &kp UNDERSCORE        &kp DOLLAR             &kp GREATER_THAN   &kp PLUS        &none  &kp RSHFT  &kp RCTRL  &kp RALT  &kp LGUI  &none
&none      &none             &kp DOUBLE_QUOTES     &kp MINUS              &kp EQUAL          &kp QUESTION    &none  &none      &none      &none     &none     &none
                             &kp AMPERSAND         &kp PIPE                                                                    &none      &none
                                                   &kp BACKSLASH          &kp COLON          &kp SEMI        &none  &none      &none
                                                   &none                  &kp ASTERISK       &kp PERIOD      &none  &none      &none
            >;
        };

        qwerty {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N3  &kp N4     &kp N5      &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
&kp TAB    &kp Q   &kp Q   &kp W   &kp R      &kp T       &kp Y   &kp U   &kp I   &kp O   &kp P   &none
&kp CAPS   &kp A   &kp A   &kp S   &kp D      &kp G       &kp H   &kp J   &kp K   &kp L   &none   &none
&kp LSHFT  &kp Z   &kp X   &kp C   &kp V      &kp B       &kp N   &kp M   &none   &none   &none   &none
                   &none   &none                                          &none   &none
                           &none   &kp LALT   &kp LGUI    &to 0   &none   &none
                           &none   &kp SPACE  &none       &none   &none   &to 0
            >;
        };
    };
};
